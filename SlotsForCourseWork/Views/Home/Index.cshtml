@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{ ViewData["Title"] = "Home Page"; }
<!-- Modal Trigger -->
@Html.AntiForgeryToken()
<nav>
    <div class="nav-wrapper">
        <a href="#" data-activates="mobile-demo" class="button-collapse"><i class="material-icons">menu</i></a>
        @if (SignInManager.IsSignedIn(User))
        {
            var user = await this.UserManager.GetUserAsync(User);
            <span class="nav-title left" style="padding:0; padding-left:10px">Hello @user.UserName !</span>
            <ul id="nav-mobile" class="right hide-on-med-and-down">
                <li><a href="" id="logoutbtn">Logout</a></li>
            </ul>
            <ul class="side-nav" id="mobile-demo">
                <li><a href="" id="logoutbtn">Logout</a></li>
            </ul>
        }
        else
        {
            <span class="nav-title left" style="padding:0; padding-left:10px">Hello!</span>
            <ul id="nav-mobile" class="right hide-on-med-and-down">
                <li><a href="#modal1" class="modal-trigger">Login</a></li>
                <li><a href="#modal2" class="modal-trigger">Register</a></li>
            </ul>
            <ul class="side-nav" id="mobile-demo">
                <li><a href="#modal1" class="modal-trigger">Login</a></li>
                <li><a href="#modal2" class="modal-trigger">Register</a></li>
            </ul>
        }
    </div>
</nav>
<!-- Login Modal-->
<div id="modal1" class="modal">
    <div class="modal-content">
        <h2>Login</h2>
        <form id="loginFormActive" class="col s12">
            <div class="row">
                <div class="input-field col s8">
                    <i class="material-icons prefix">account_circle</i>
                    <input id="UserNameL" type="text" class="validate">
                    <label for="UserNameL">UserName</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s8">
                    <i class="material-icons prefix">keyboard_arrow_right</i>
                    <input id="PasswordL" type="password" class="validate">
                    <label for="PasswordL">Password</label>
                </div>
            </div>
            <div class="row">
                <div class="col s4">
                    <p>
                        <input type="checkbox" id="rememberMeL" />
                        <label for="rememberMeL">Remember me?</label>
                    </p>
                </div>
                <div class="col s6 offset-s6">
                    <div id="result_Loginform"></div>
                </div>
            </div>
            <input type="submit" class="btn" id="loginbtn" value="Login" />
        </form>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-action modal-close waves-effect waves-red btn-flat">Close</a>
    </div>
</div>
<!--Register Modal-->
<div id="modal2" class="modal">
    <div class="modal-content">
        <h2>Register User</h2>
        <form id="registerForm" class="col s12">
            <div class="row">
                <div class="input-field col s6">
                    <i class="material-icons prefix">account_circle</i>
                    <input id="UserNameR" type="text" class="validate" required maxlength="16">
                    <label for="UserNameR" data-error="Wrong UserName">UserName</label>
                </div>
                <div class="input-field col s6">
                    <i class="material-icons prefix">email</i>
                    <input id="EmailR" type="email" class="validate" required>
                    <label for="EmailR" data-error="Wrong Email">Email</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s6">
                    <i class="material-icons prefix">keyboard_arrow_right</i>
                    <input id="PasswordR" type="password" class="validate" required>
                    <label for="PasswordR" data-error="Wrong Password">Password</label>
                </div>
                <div class="input-field col s6">
                    <i class="material-icons prefix">keyboard_arrow_right</i>
                    <input id="ConfirmPasswordR" type="password" class="validate" required>
                    <label for="ConfirmPasswordR">Confirm Password</label>
                </div>
            </div>
            <div class="row">
                <div class="col s6">
                    <input type="submit" class="btn" id="registerbtn" value="Register" />
                </div>
                <div class="col s6 offset-s6">
                    <div id="result_RegisterForm"></div>
                </div>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-action modal-close waves-effect waves-red btn-flat">Close</a>
    </div>
</div>
<div class="row">
    <div class="col s12">
        <ul class="tabs">
            <li class="tab col s3"><a class="active" href="#main">Play</a></li>
            <li class="tab col s3"><a href="#options">Options</a></li>
            <li class="tab col s3"><a href="#bestScores" id="bScoresButton">Best Scores</a></li>
            <li class="tab col s3"><a href="#lastSpins" id="btnClassement">Last spins</a></li>
        </ul>
    </div>
</div>
<br>
<div id="main">
    <div class="row">
        <div class="col s6 ">
            <h2>
                Credits
                @if (SignInManager.IsSignedIn(User))
                {
                    var user = await this.UserManager.GetUserAsync(User);
                    <span id="chip" class="chip" value>
                    @user.Credits
                    </span>
                }
                else{
                    <span id="chip" class="chip" value>
                100
                    </span>
                }
</h2> <br>
            <h2>
                Best Score
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await this.UserManager.GetUserAsync(User);
                <span id="highScore" class="chip" value>
                        @user.BestScore
                </span>
                    }
                    else
                    {
            <span id="highScore" class="chip" value>
            0
            </span>   
                    }
            </h2> <br>
            <h2>Gains</h2>
            <br>
            <table>
                <tr>
                    <td>
                        <img class="thumb" src="~/images/1.png">
                        <img class="thumb " src="~/images/1.png">
                        <img class="thumb " src="~/images/1.png">
                        <img class="thumb " src="~/images/1.png">
                    </td>
                    <td class="info"> <span id="all"></span> credits</td>
                </tr>
                <tr>
                    <td>
                        <img class="thumb" src="~/images/1.png">
                        <img class="thumb " src="~/images/1.png">
                        <img class="thumb " src="~/images/2.png">
                        <img class="thumb " src="~/images/2.png">
                    </td>
                    <td class="info"> <span id="doublePair"></span> credits</td>
                </tr>
            </table> <br>


            <h2>Bet (max 10,000)</h2>
            <input type="number" min="1" max="10000" name="bet" id="bet" value="1" maxlength="8" size="8" >
            <br><br>

        </div>
        <div class="col s6 items">
            <img class="slot full slot1" src="~/images/0.png">
            <img class="slot full slot2" src="~/images/1.png">
            <img class="slot full slot3" src="~/images/2.png">
            <img class="slot full slot4" src="~/images/3.png">
        </div>

    </div>
    <button id="control" class="but btn blue">Spin</button>
    <button id="save" class="but btn blue" data-target="saveScore">Save</button>

</div>
<div id="options">
    <span class="labels">Volume</span> <br>
    <i class="material-icons dp48" id="change">volume_up</i><input style="width: 75%;" type="range" onchange="setVolume(); " id='vol' min=0 max=1 step=0.01 value='1'>
    <br>
</div>

<div id="bestScores" class="scores" style="height:400px">
    <table id="TableBS">
        <thead>
            <tr>
                <th>#</th>
                <th>UserName</th>
                <th>BestScore</th>
            </tr>
        </thead>
        <tbody id="userslist">
        </tbody>
    </table>

</div>
<div id="lastSpins">
    <table class="">
        <thead>
            <tr>
                <th></th>
                <th>Nom</th>
                <th>Score</th>
            </tr>
        </thead>
        <tbody id="value2">
        </tbody>
    </table>
</div>
@section Scripts {
    <script src="~/js/BestUsersList.js" asp-append-version="true"></script>
    <script src="~/js/Logout.js" asp-append-version="true"></script>
    <script src="~/js/Login.js" asp-append-version="true"></script>
    <script src="~/js/Register.js" asp-append-version="true"></script>
}
